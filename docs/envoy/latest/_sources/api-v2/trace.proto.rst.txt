.. _envoy_api_file_api/trace.proto:

Tracing
=======

Tracing :ref:`architecture overview <arch_overview_tracing>`.

.. _envoy_api_msg_Tracing:

Tracing
-------

`[Tracing proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/trace.proto#L16>`_

The tracing configuration specifies global
settings for the HTTP tracer used by Envoy. The configuration is defined by
the :ref:`Bootstrap <envoy_api_msg_Bootstrap>` :ref:`tracing
<envoy_api_field_Bootstrap.tracing>` field. Envoy may support other tracers
in the future, but right now the HTTP tracer is the only one supported.

.. code-block:: json

  {
    "http": "{...}"
  }

.. _envoy_api_field_Tracing.http:

http
  (:ref:`Tracing.Http <envoy_api_msg_Tracing.Http>`) Provides configuration for the HTTP tracer.
  
  
.. _envoy_api_msg_Tracing.Http:

Tracing.Http
------------

`[Tracing.Http proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/trace.proto#L17>`_


.. code-block:: json

  {
    "name": "...",
    "config": "{...}"
  }

.. _envoy_api_field_Tracing.Http.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The name of the HTTP trace driver to instantiate. The name must match a
  supported HTTP trace driver. *envoy.lightstep* and *envoy.zipkin* are
  built-in trace drivers.
  
  
.. _envoy_api_field_Tracing.Http.config:

config
  (`Struct <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`_) Trace driver specific configuration which depends on the driver being
  instantiated. See the :ref:`LightstepConfig
  <envoy_api_msg_LightstepConfig>` and :ref:`ZipkinConfig
  <envoy_api_msg_ZipkinConfig>` trace drivers for examples.
  
  



.. _envoy_api_msg_LightstepConfig:

LightstepConfig
---------------

`[LightstepConfig proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/trace.proto#L34>`_

Configuration for the LightStep tracer.

.. code-block:: json

  {
    "collector_cluster": "...",
    "access_token_file": "..."
  }

.. _envoy_api_field_LightstepConfig.collector_cluster:

collector_cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The cluster manager cluster that hosts the LightStep collectors.
  
  
.. _envoy_api_field_LightstepConfig.access_token_file:

access_token_file
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) File containing the access token to the `LightStep
  <http://lightstep.com/>`_ API.
  
  


.. _envoy_api_msg_ZipkinConfig:

ZipkinConfig
------------

`[ZipkinConfig proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/trace.proto#L43>`_


.. code-block:: json

  {
    "collector_cluster": "...",
    "collector_endpoint": "..."
  }

.. _envoy_api_field_ZipkinConfig.collector_cluster:

collector_cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The cluster manager cluster that hosts the Zipkin collectors. Note that the
  Zipkin cluster must be defined in the :ref:`Bootstrap static cluster
  resources <envoy_api_field_Bootstrap.StaticResources.clusters>`.
  
  
.. _envoy_api_field_ZipkinConfig.collector_endpoint:

collector_endpoint
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The API endpoint of the Zipkin service where the spans will be sent. When
  using a standard Zipkin installation, the API endpoint is typically
  /api/v1/spans, which is the default value.
  
  

