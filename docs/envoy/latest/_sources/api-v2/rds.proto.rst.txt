.. _envoy_api_file_api/rds.proto:

RDS
===

This is heavily derived from
https://lyft.github.io/envoy/docs/configuration/http_conn_man/route_config/route_config.html#config-http-conn-man-route-table.
The v2 gRPC API differences are tagged with [V2-API-DIFF].

.. _envoy_api_msg_WeightedCluster:

WeightedCluster
---------------

`[WeightedCluster proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L41>`_

Compared to the cluster field that specifies a single upstream cluster as the
target of a request, the weighted_clusters option allows for specification of
multiple upstream clusters along with weights that indicate the percentage of
traffic to be forwarded to each cluster. The router selects an upstream
cluster based on the weights.

.. code-block:: json

  {
    "clusters": [],
    "runtime_key_prefix": "..."
  }

.. _envoy_api_field_WeightedCluster.clusters:

clusters
  (:ref:`WeightedCluster.ClusterWeight <envoy_api_msg_WeightedCluster.ClusterWeight>`) Specifies one or more upstream clusters associated with the route.
  
  
.. _envoy_api_field_WeightedCluster.runtime_key_prefix:

runtime_key_prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the runtime key prefix that should be used to construct the
  runtime keys associated with each cluster. When the runtime_key_prefix is
  specified, the router will look for weights associated with each upstream
  cluster under the key runtime_key_prefix + "." + cluster[i].name where
  cluster[i] denotes an entry in the clusters array field. If the runtime
  key for the cluster does not exist, the value specified in the
  configuration file will be used as the default weight. See the runtime
  documentation for how key names map to the underlying implementation.
  
  
.. _envoy_api_msg_WeightedCluster.ClusterWeight:

WeightedCluster.ClusterWeight
-----------------------------

`[WeightedCluster.ClusterWeight proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L42>`_


.. code-block:: json

  {
    "name": "...",
    "weight": "{...}",
    "metadata_match": "{...}"
  }

.. _envoy_api_field_WeightedCluster.ClusterWeight.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Name of the upstream cluster. The cluster must exist in the cluster
  manager configuration.
  
  
.. _envoy_api_field_WeightedCluster.ClusterWeight.weight:

weight
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) An integer between 0-100. When a request matches the route, the choice of
  an upstream cluster is determined by its weight. The sum of weights
  across all entries in the clusters array must add up to 100.
  
  
.. _envoy_api_field_WeightedCluster.ClusterWeight.metadata_match:

metadata_match
  (:ref:`Metadata <envoy_api_msg_Metadata>`) Optional endpoint metadata match criteria. Only endpoints in the upstream
  cluster with metadata matching that set in metadata_match will be
  considered. The filter name should be specified as "envoy.lb".
  
  



.. _envoy_api_msg_RouteMatch:

RouteMatch
----------

`[RouteMatch proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L68>`_


.. code-block:: json

  {
    "prefix": "...",
    "path": "...",
    "regex": "...",
    "case_sensitive": "{...}",
    "runtime": "{...}",
    "headers": []
  }

.. _envoy_api_field_RouteMatch.prefix:

prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If specified, the route is a prefix rule meaning that the prefix must
  match the beginning of the :path header.
  
  
  Only one of :ref:`prefix <envoy_api_field_RouteMatch.prefix>`, :ref:`path <envoy_api_field_RouteMatch.path>`, :ref:`regex <envoy_api_field_RouteMatch.regex>` may be set.
  
.. _envoy_api_field_RouteMatch.path:

path
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If specified, the route is an exact path rule meaning that the path must
  exactly match the :path header once the query string is removed.
  
  
  Only one of :ref:`prefix <envoy_api_field_RouteMatch.prefix>`, :ref:`path <envoy_api_field_RouteMatch.path>`, :ref:`regex <envoy_api_field_RouteMatch.regex>` may be set.
  
.. _envoy_api_field_RouteMatch.regex:

regex
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If specified, the route is a regular expression match on the :path header
  once the query string is removed [V2-API-DIFF].
  
  
  Only one of :ref:`prefix <envoy_api_field_RouteMatch.prefix>`, :ref:`path <envoy_api_field_RouteMatch.path>`, :ref:`regex <envoy_api_field_RouteMatch.regex>` may be set.
  
.. _envoy_api_field_RouteMatch.case_sensitive:

case_sensitive
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Indicates that prefix/path matching should be case insensitive. The default
  is true.
  
  
.. _envoy_api_field_RouteMatch.runtime:

runtime
  (:ref:`RuntimeUInt32 <envoy_api_msg_RuntimeUInt32>`) Indicates that the route should additionally match on a runtime key. An
  integer between 0-100. Every time the route is considered for a match, a
  random number between 0-99 is selected. If the number is <= the value found
  in the key (checked first) or, if the key is not present, the default
  value, the route is a match (assuming everything also about the route
  matches).
  A runtime route configuration can be used to roll out route changes in a
  gradual manner without full code/config deploys. Refer to traffic shifting
  docs for additional documentation.
  
  
.. _envoy_api_field_RouteMatch.headers:

headers
  (:ref:`HeaderMatcher <envoy_api_msg_HeaderMatcher>`) Specifies a set of headers that the route should match on. The router will
  check the request’s headers against all the specified headers in the route
  config. A match will happen if all the headers in the route are present in
  the request with the same values (or based on presence if the value field
  is not in the config).
  
  


.. _envoy_api_msg_CorsPolicy:

CorsPolicy
----------

`[CorsPolicy proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L106>`_


.. code-block:: json

  {
    "allow_origin": [],
    "allow_methods": "...",
    "allow_headers": "...",
    "expose_headers": "...",
    "max_age": "...",
    "allow_credentials": "{...}",
    "enabled": "{...}"
  }

.. _envoy_api_field_CorsPolicy.allow_origin:

allow_origin
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the origins that will be allowed to do CORS requests.
  
  
.. _envoy_api_field_CorsPolicy.allow_methods:

allow_methods
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the content for the access-control-allow-methods header.
  
  
.. _envoy_api_field_CorsPolicy.allow_headers:

allow_headers
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the content for the access-control-allow-headers header.
  
  
.. _envoy_api_field_CorsPolicy.expose_headers:

expose_headers
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the content for the access-control-expose-headers header.
  
  
.. _envoy_api_field_CorsPolicy.max_age:

max_age
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the content for the access-control-max-age header.
  
  
.. _envoy_api_field_CorsPolicy.allow_credentials:

allow_credentials
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Specifies whether the resource allows credentials.
  
  
.. _envoy_api_field_CorsPolicy.enabled:

enabled
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Specifies if CORS is enabled. Defaults to true. Only effective on route.
  
  


.. _envoy_api_msg_RouteAction:

RouteAction
-----------

`[RouteAction proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L123>`_


.. code-block:: json

  {
    "cluster": "...",
    "cluster_header": "...",
    "weighted_clusters": "{...}",
    "metadata_match": "{...}",
    "prefix_rewrite": "...",
    "host_rewrite": "...",
    "auto_host_rewrite": "{...}",
    "timeout": "{...}",
    "retry_policy": "{...}",
    "request_mirror_policy": "{...}",
    "priority": "...",
    "request_headers_to_add": [],
    "response_headers_to_add": [],
    "response_headers_to_remove": [],
    "rate_limits": [],
    "include_vh_rate_limits": "{...}",
    "hash_policy": [],
    "use_websocket": "{...}",
    "cors": "{...}"
  }

.. _envoy_api_field_RouteAction.cluster:

cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Indicates the upstream cluster to which the request should be routed
  to.
  
  
  Only one of :ref:`cluster <envoy_api_field_RouteAction.cluster>`, :ref:`cluster_header <envoy_api_field_RouteAction.cluster_header>`, :ref:`weighted_clusters <envoy_api_field_RouteAction.weighted_clusters>` may be set.
  
.. _envoy_api_field_RouteAction.cluster_header:

cluster_header
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Envoy will determine the cluster to route to by reading the value of the
  HTTP header named by cluster_header from the request headers. If the
  header is not found or the referenced cluster does not exist, Envoy will
  return a 404 response.
  
  
  Only one of :ref:`cluster <envoy_api_field_RouteAction.cluster>`, :ref:`cluster_header <envoy_api_field_RouteAction.cluster_header>`, :ref:`weighted_clusters <envoy_api_field_RouteAction.weighted_clusters>` may be set.
  
.. _envoy_api_field_RouteAction.weighted_clusters:

weighted_clusters
  (:ref:`WeightedCluster <envoy_api_msg_WeightedCluster>`) Multiple upstream clusters can be specified for a given route. The
  request is routed to one of the upstream clusters based on weights
  assigned to each cluster. See traffic splitting for additional
  documentation.
  
  
  Only one of :ref:`cluster <envoy_api_field_RouteAction.cluster>`, :ref:`cluster_header <envoy_api_field_RouteAction.cluster_header>`, :ref:`weighted_clusters <envoy_api_field_RouteAction.weighted_clusters>` may be set.
  
.. _envoy_api_field_RouteAction.metadata_match:

metadata_match
  (:ref:`Metadata <envoy_api_msg_Metadata>`) Optional endpoint metadata match criteria. Only endpoints in the upstream
  cluster with metadata matching that set in metadata_match will be
  considered. The filter name should be specified as "envoy.lb".
  
  
.. _envoy_api_field_RouteAction.prefix_rewrite:

prefix_rewrite
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Indicates that during forwarding, the matched prefix (or path) should be
  swapped with this value. This option allows application URLs to be rooted
  at a different path from those exposed at the reverse proxy layer.
  
  
.. _envoy_api_field_RouteAction.host_rewrite:

host_rewrite
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Indicates that during forwarding, the host header will be swapped with
  this value.
  
  
  Only one of :ref:`host_rewrite <envoy_api_field_RouteAction.host_rewrite>`, :ref:`auto_host_rewrite <envoy_api_field_RouteAction.auto_host_rewrite>` may be set.
  
.. _envoy_api_field_RouteAction.auto_host_rewrite:

auto_host_rewrite
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Indicates that during forwarding, the host header will be swapped with
  the hostname of the upstream host chosen by the cluster manager. This
  option is applicable only when the destination cluster for a route is of
  type strict_dns or logical_dns. Setting this to true with other cluster
  types has no effect.
  
  
  Only one of :ref:`host_rewrite <envoy_api_field_RouteAction.host_rewrite>`, :ref:`auto_host_rewrite <envoy_api_field_RouteAction.auto_host_rewrite>` may be set.
  
.. _envoy_api_field_RouteAction.timeout:

timeout
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) Specifies the timeout for the route. If not specified, the default is 15s.
  Note that this timeout includes all retries. See also
  x-envoy-upstream-rq-timeout-ms, x-envoy-upstream-rq-per-try-timeout-ms, and
  the retry overview.
  
  
.. _envoy_api_field_RouteAction.retry_policy:

retry_policy
  (:ref:`RouteAction.RetryPolicy <envoy_api_msg_RouteAction.RetryPolicy>`) Indicates that the route has a retry policy.
  
  
.. _envoy_api_field_RouteAction.request_mirror_policy:

request_mirror_policy
  (:ref:`RouteAction.RequestMirrorPolicy <envoy_api_msg_RouteAction.RequestMirrorPolicy>`) 
  
.. _envoy_api_field_RouteAction.priority:

priority
  (:ref:`RoutingPriority <envoy_api_enum_RoutingPriority>`) 
  
.. _envoy_api_field_RouteAction.request_headers_to_add:

request_headers_to_add
  (:ref:`HeaderValueOption <envoy_api_msg_HeaderValueOption>`) Specifies a set of headers that will be added to requests matching this
  route. Headers specified at this level are applied before headers from the
  enclosing VirtualHost and RouteConfiguration.
  
  
.. _envoy_api_field_RouteAction.response_headers_to_add:

response_headers_to_add
  (:ref:`HeaderValueOption <envoy_api_msg_HeaderValueOption>`) Specifies a set of headers that will be added to responses to requests
  matching this route. Headers specified at this level are applied before
  headers from the enclosing VirtualHost and RouteConfiguration.
  
  
.. _envoy_api_field_RouteAction.response_headers_to_remove:

response_headers_to_remove
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies a list of HTTP headers that should be removed from each response
  to requests matching this route.
  
  
.. _envoy_api_field_RouteAction.rate_limits:

rate_limits
  (:ref:`RateLimit <envoy_api_msg_RateLimit>`) Specifies a set of rate limit configurations that could be applied to the
  route.
  
  
.. _envoy_api_field_RouteAction.include_vh_rate_limits:

include_vh_rate_limits
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Specifies if the rate limit filter should include the virtual host rate
  limits. By default, if the route configured rate limits, the virtual host
  rate_limits are not applied to the request.
  
  
.. _envoy_api_field_RouteAction.hash_policy:

hash_policy
  (:ref:`RouteAction.HashPolicy <envoy_api_msg_RouteAction.HashPolicy>`) Specifies a list of hash policies to use for ring hash load balancing. Each
  hash policy is evaluated individually and the combined result is used to
  route the request. The method of combination is deterministic such that
  identical lists of hash policies will produce the same hash. Since a hash
  policy examines specific parts of a request, it can fail to produce a hash
  (i.e. if the hashed header is not present). If (and only if) all configured
  hash policies fail to generate a hash, no hash will be produced for
  the route. In this case, the behavior is the same as if no hash policies
  were specified (i.e. the ring hash load balancer will choose a random
  backend).
  
  
.. _envoy_api_field_RouteAction.use_websocket:

use_websocket
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Indicates that a HTTP/1.1 client connection to this particular route
  should be allowed (and expected) to upgrade to a WebSocket connection. The
  default is false.
  
  Attention
  
  If set to true, Envoy will expect the first request matching this route to
  contain WebSocket upgrade headers. If the headers are not present, the
  connection will be rejected. If set to true, Envoy will setup plain TCP
  proxying between the client and the upstream server. Hence, an upstream
  server that rejects the WebSocket upgrade request is also responsible for
  closing the associated connection. Until then, Envoy will continue to
  proxy data from the client to the upstream server.
  
  Redirects, timeouts and retries are not supported on routes where
  websocket upgrades are allowed.
  
  
.. _envoy_api_field_RouteAction.cors:

cors
  (:ref:`CorsPolicy <envoy_api_msg_CorsPolicy>`) Indicates that the route has a CORS policy.
  
  
.. _envoy_api_msg_RouteAction.RetryPolicy:

RouteAction.RetryPolicy
-----------------------

`[RouteAction.RetryPolicy proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L167>`_


.. code-block:: json

  {
    "retry_on": "...",
    "num_retries": "{...}",
    "per_try_timeout": "{...}"
  }

.. _envoy_api_field_RouteAction.RetryPolicy.retry_on:

retry_on
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the conditions under which retry takes place. These are the
  same conditions documented for x-envoy-retry-on.
  
  
.. _envoy_api_field_RouteAction.RetryPolicy.num_retries:

num_retries
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) Specifies the allowed number of retries. This parameter is optional and
  defaults to 1. These are the same conditions documented for
  x-envoy-max-retries.
  
  
.. _envoy_api_field_RouteAction.RetryPolicy.per_try_timeout:

per_try_timeout
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) Specifies a non-zero timeout per retry attempt. This parameter is
  optional. The same conditions documented for
  x-envoy-upstream-rq-per-try-timeout-ms apply.
  
  


.. _envoy_api_msg_RouteAction.RequestMirrorPolicy:

RouteAction.RequestMirrorPolicy
-------------------------------

`[RouteAction.RequestMirrorPolicy proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L184>`_

Indicates that the route has a request mirroring policy.

.. code-block:: json

  {
    "cluster": "...",
    "runtime_key": "..."
  }

.. _envoy_api_field_RouteAction.RequestMirrorPolicy.cluster:

cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the cluster that requests will be mirrored to. The cluster must
  exist in the cluster manager configuration.
  
  
.. _envoy_api_field_RouteAction.RequestMirrorPolicy.runtime_key:

runtime_key
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If not specified, all requests to the target cluster will be mirrored. If
  specified, Envoy will lookup the runtime key to get the % of requests to
  mirror. Valid values are from 0 to 10000, allowing for increments of
  0.01% of requests to be mirrored. If the runtime key is specified in the
  configuration but not present in runtime, 0 is the default and thus 0% of
  requests will be mirrored.
  
  


.. _envoy_api_msg_RouteAction.HashPolicy:

RouteAction.HashPolicy
----------------------

`[RouteAction.HashPolicy proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L223>`_


.. code-block:: json

  {
    "header": "{...}",
    "cookie": "{...}",
    "connection_properties": "{...}"
  }

.. _envoy_api_field_RouteAction.HashPolicy.header:

header
  (:ref:`RouteAction.HashPolicy.Header <envoy_api_msg_RouteAction.HashPolicy.Header>`) 
  
  Only one of :ref:`header <envoy_api_field_RouteAction.HashPolicy.header>`, :ref:`cookie <envoy_api_field_RouteAction.HashPolicy.cookie>`, :ref:`connection_properties <envoy_api_field_RouteAction.HashPolicy.connection_properties>` may be set.
  
.. _envoy_api_field_RouteAction.HashPolicy.cookie:

cookie
  (:ref:`RouteAction.HashPolicy.Cookie <envoy_api_msg_RouteAction.HashPolicy.Cookie>`) 
  
  Only one of :ref:`header <envoy_api_field_RouteAction.HashPolicy.header>`, :ref:`cookie <envoy_api_field_RouteAction.HashPolicy.cookie>`, :ref:`connection_properties <envoy_api_field_RouteAction.HashPolicy.connection_properties>` may be set.
  
.. _envoy_api_field_RouteAction.HashPolicy.connection_properties:

connection_properties
  (:ref:`RouteAction.HashPolicy.ConnectionProperties <envoy_api_msg_RouteAction.HashPolicy.ConnectionProperties>`) 
  
  Only one of :ref:`header <envoy_api_field_RouteAction.HashPolicy.header>`, :ref:`cookie <envoy_api_field_RouteAction.HashPolicy.cookie>`, :ref:`connection_properties <envoy_api_field_RouteAction.HashPolicy.connection_properties>` may be set.
  
.. _envoy_api_msg_RouteAction.HashPolicy.Header:

RouteAction.HashPolicy.Header
-----------------------------

`[RouteAction.HashPolicy.Header proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L226>`_

[V2-API-DIFF] We expect additional hash policies in the future, e.g.
cookie based, originating IP, etc.

.. code-block:: json

  {
    "header_name": "..."
  }

.. _envoy_api_field_RouteAction.HashPolicy.Header.header_name:

header_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the request header that will be used to obtain the hash
  key. If the request header is not present, no hash will be produced.
  
  


.. _envoy_api_msg_RouteAction.HashPolicy.Cookie:

RouteAction.HashPolicy.Cookie
-----------------------------

`[RouteAction.HashPolicy.Cookie proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L245>`_

Envoy supports two types of cookie affinity:

1. Passive. Envoy takes a cookie that's present in the cookies header and
   hashes on its value.

2. Generated. Envoy generates and sets a cookie with an expiration (TTL)
   on the first request from the client in its response to the client,
   based on the endpoint the request gets sent to. The client then
   presents this on the next and all subsequent requests. The hash of
   this is sufficient to ensure these requests get sent to the same
   endpoint. The cookie is generated by hashing the source and
   destination ports and addresses so that multiple independent HTTP2
   streams on the same connection will independently receive the same
   cookie, even if they arrive at the Envoy simultaneously.

.. code-block:: json

  {
    "name": "...",
    "ttl": "{...}"
  }

.. _envoy_api_field_RouteAction.HashPolicy.Cookie.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the cookie that will be used to obtain the hash key. If the
  cookie is not present and ttl below is not set, no hash will be
  produced.
  
  
.. _envoy_api_field_RouteAction.HashPolicy.Cookie.ttl:

ttl
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) If specified, a cookie with the TTL will be generated if the cookie is
  not present.
  
  


.. _envoy_api_msg_RouteAction.HashPolicy.ConnectionProperties:

RouteAction.HashPolicy.ConnectionProperties
-------------------------------------------

`[RouteAction.HashPolicy.ConnectionProperties proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L254>`_


.. code-block:: json

  {
    "source_ip": "..."
  }

.. _envoy_api_field_RouteAction.HashPolicy.ConnectionProperties.source_ip:

source_ip
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Hash on source IP address.
  
  




.. _envoy_api_msg_RedirectAction:

RedirectAction
--------------

`[RedirectAction proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L298>`_


.. code-block:: json

  {
    "host_redirect": "...",
    "path_redirect": "...",
    "response_code": "..."
  }

.. _envoy_api_field_RedirectAction.host_redirect:

host_redirect
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host portion of the URL will be swapped with this value.
  
  
.. _envoy_api_field_RedirectAction.path_redirect:

path_redirect
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The path portion of the URL will be swapped with this value.
  
  
.. _envoy_api_field_RedirectAction.response_code:

response_code
  (:ref:`RedirectAction.RedirectResponseCode <envoy_api_enum_RedirectAction.RedirectResponseCode>`) The HTTP status code to use in the redirect response. The default response
  code is MOVED_PERMANENTLY (301).
  
  

.. _envoy_api_enum_RedirectAction.RedirectResponseCode:

Enum RedirectAction.RedirectResponseCode
----------------------------------------

`[RedirectAction.RedirectResponseCode proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L304>`_


.. _envoy_api_enum_value_RedirectAction.RedirectResponseCode.MOVED_PERMANENTLY:

MOVED_PERMANENTLY
  *(DEFAULT)* ⁣Moved Permanently HTTP Status Code - 301.
  
  
.. _envoy_api_enum_value_RedirectAction.RedirectResponseCode.FOUND:

FOUND
  ⁣Found HTTP Status Code - 302.
  
  
.. _envoy_api_enum_value_RedirectAction.RedirectResponseCode.SEE_OTHER:

SEE_OTHER
  ⁣See Other HTTP Status Code - 303.
  
  
.. _envoy_api_enum_value_RedirectAction.RedirectResponseCode.TEMPORARY_REDIRECT:

TEMPORARY_REDIRECT
  ⁣Temporary Redirect HTTP Status Code - 307.
  
  
.. _envoy_api_enum_value_RedirectAction.RedirectResponseCode.PERMANENT_REDIRECT:

PERMANENT_REDIRECT
  ⁣Permanent Redirect HTTP Status Code - 308.
  
  

.. _envoy_api_msg_Decorator:

Decorator
---------

`[Decorator proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L321>`_


.. code-block:: json

  {
    "operation": "..."
  }

.. _envoy_api_field_Decorator.operation:

operation
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The operation (or span name) to be used for the matched route.
  
  


.. _envoy_api_msg_Route:

Route
-----

`[Route proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L328>`_

The match/action distinction in Route is surfaced explicitly in the v2 API
[V2-API-DIFF].

.. code-block:: json

  {
    "match": "{...}",
    "route": "{...}",
    "redirect": "{...}",
    "metadata": "{...}",
    "decorator": "{...}"
  }

.. _envoy_api_field_Route.match:

match
  (:ref:`RouteMatch <envoy_api_msg_RouteMatch>`) 
  
.. _envoy_api_field_Route.route:

route
  (:ref:`RouteAction <envoy_api_msg_RouteAction>`) Route request to some upstream cluster.
  
  
  Only one of :ref:`route <envoy_api_field_Route.route>`, :ref:`redirect <envoy_api_field_Route.redirect>` may be set.
  
.. _envoy_api_field_Route.redirect:

redirect
  (:ref:`RedirectAction <envoy_api_msg_RedirectAction>`) Return a 302 redirect.
  
  
  Only one of :ref:`route <envoy_api_field_Route.route>`, :ref:`redirect <envoy_api_field_Route.redirect>` may be set.
  
.. _envoy_api_field_Route.metadata:

metadata
  (:ref:`Metadata <envoy_api_msg_Metadata>`) See base.Metadata description for message structure. The Metadata field
  can be used to provide the Router filter additional information
  about the Route. It can be used for configuration, stats, and logging.
  The metadata should go under the filter namespace that will need it.
  For instance, if the metadata is intended for the Router filter,
  the filter name should be specified as "envoy.router".
  
  
.. _envoy_api_field_Route.decorator:

decorator
  (:ref:`Decorator <envoy_api_msg_Decorator>`) Decorator for matched route.
  
  



.. _envoy_api_msg_VirtualCluster:

VirtualCluster
--------------

`[VirtualCluster proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L364>`_

A virtual cluster is a way of specifying a regex matching rule against
certain important endpoints such that statistics are generated explicitly for
the matched requests. The reason this is useful is that when doing
prefix/path matching Envoy does not always know what the application
considers to be an endpoint. Thus, it’s impossible for Envoy to generically
emit per endpoint statistics. However, often systems have highly critical
endpoints that they wish to get “perfect” statistics on. Virtual cluster
statistics are perfect in the sense that they are emitted on the downstream
side such that they include network level failures.

.. code-block:: json

  {
    "pattern": "...",
    "name": "...",
    "method": "..."
  }

.. _envoy_api_field_VirtualCluster.pattern:

pattern
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies a regex pattern to use for matching requests.
  
  
.. _envoy_api_field_VirtualCluster.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the name of the virtual cluster. The virtual cluster name as well
  as the virtual host name are used when emitting statistics.
  
  
.. _envoy_api_field_VirtualCluster.method:

method
  (:ref:`RequestMethod <envoy_api_enum_RequestMethod>`) Optionally specifies the HTTP method to match on. For example GET, PUT,
  etc.
  
  


.. _envoy_api_msg_RateLimit:

RateLimit
---------

`[RateLimit proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L379>`_

See
https://lyft.github.io/envoy/docs/configuration/http_conn_man/route_config/rate_limits.html

.. code-block:: json

  {
    "stage": "{...}",
    "disable_key": "...",
    "actions": []
  }

.. _envoy_api_field_RateLimit.stage:

stage
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) Refers to the stage set in the filter. The rate limit configuration only
  applies to filters with the same stage number. The default stage number is
  0.
  NOTE: The filter supports a range of 0 - 10 inclusively for stage numbers.
  
  
.. _envoy_api_field_RateLimit.disable_key:

disable_key
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The key to be set in runtime to disable this rate limit configuration.
  
  
.. _envoy_api_field_RateLimit.actions:

actions
  (:ref:`RateLimit.Action <envoy_api_msg_RateLimit.Action>`) A list of actions that are to be applied for this rate limit configuration.
  Order matters as the actions are processed sequentially and the descriptor
  is composed by appending descriptor entries in that sequence. If an action
  cannot append a descriptor entry, no descriptor is generated for the
  configuration. See composing actions for additional documentation.
  
  
.. _envoy_api_msg_RateLimit.Action:

RateLimit.Action
----------------

`[RateLimit.Action proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L389>`_


.. code-block:: json

  {
    "source_cluster": "{...}",
    "destination_cluster": "{...}",
    "request_headers": "{...}",
    "remote_address": "{...}",
    "generic_key": "{...}",
    "header_value_match": "{...}"
  }

.. _envoy_api_field_RateLimit.Action.source_cluster:

source_cluster
  (:ref:`RateLimit.Action.SourceCluster <envoy_api_msg_RateLimit.Action.SourceCluster>`) 
  
  Only one of :ref:`source_cluster <envoy_api_field_RateLimit.Action.source_cluster>`, :ref:`destination_cluster <envoy_api_field_RateLimit.Action.destination_cluster>`, :ref:`request_headers <envoy_api_field_RateLimit.Action.request_headers>`, :ref:`remote_address <envoy_api_field_RateLimit.Action.remote_address>`, :ref:`generic_key <envoy_api_field_RateLimit.Action.generic_key>`, :ref:`header_value_match <envoy_api_field_RateLimit.Action.header_value_match>` may be set.
  
.. _envoy_api_field_RateLimit.Action.destination_cluster:

destination_cluster
  (:ref:`RateLimit.Action.DestinationCluster <envoy_api_msg_RateLimit.Action.DestinationCluster>`) 
  
  Only one of :ref:`source_cluster <envoy_api_field_RateLimit.Action.source_cluster>`, :ref:`destination_cluster <envoy_api_field_RateLimit.Action.destination_cluster>`, :ref:`request_headers <envoy_api_field_RateLimit.Action.request_headers>`, :ref:`remote_address <envoy_api_field_RateLimit.Action.remote_address>`, :ref:`generic_key <envoy_api_field_RateLimit.Action.generic_key>`, :ref:`header_value_match <envoy_api_field_RateLimit.Action.header_value_match>` may be set.
  
.. _envoy_api_field_RateLimit.Action.request_headers:

request_headers
  (:ref:`RateLimit.Action.RequestHeaders <envoy_api_msg_RateLimit.Action.RequestHeaders>`) 
  
  Only one of :ref:`source_cluster <envoy_api_field_RateLimit.Action.source_cluster>`, :ref:`destination_cluster <envoy_api_field_RateLimit.Action.destination_cluster>`, :ref:`request_headers <envoy_api_field_RateLimit.Action.request_headers>`, :ref:`remote_address <envoy_api_field_RateLimit.Action.remote_address>`, :ref:`generic_key <envoy_api_field_RateLimit.Action.generic_key>`, :ref:`header_value_match <envoy_api_field_RateLimit.Action.header_value_match>` may be set.
  
.. _envoy_api_field_RateLimit.Action.remote_address:

remote_address
  (:ref:`RateLimit.Action.RemoteAddress <envoy_api_msg_RateLimit.Action.RemoteAddress>`) 
  
  Only one of :ref:`source_cluster <envoy_api_field_RateLimit.Action.source_cluster>`, :ref:`destination_cluster <envoy_api_field_RateLimit.Action.destination_cluster>`, :ref:`request_headers <envoy_api_field_RateLimit.Action.request_headers>`, :ref:`remote_address <envoy_api_field_RateLimit.Action.remote_address>`, :ref:`generic_key <envoy_api_field_RateLimit.Action.generic_key>`, :ref:`header_value_match <envoy_api_field_RateLimit.Action.header_value_match>` may be set.
  
.. _envoy_api_field_RateLimit.Action.generic_key:

generic_key
  (:ref:`RateLimit.Action.GenericKey <envoy_api_msg_RateLimit.Action.GenericKey>`) 
  
  Only one of :ref:`source_cluster <envoy_api_field_RateLimit.Action.source_cluster>`, :ref:`destination_cluster <envoy_api_field_RateLimit.Action.destination_cluster>`, :ref:`request_headers <envoy_api_field_RateLimit.Action.request_headers>`, :ref:`remote_address <envoy_api_field_RateLimit.Action.remote_address>`, :ref:`generic_key <envoy_api_field_RateLimit.Action.generic_key>`, :ref:`header_value_match <envoy_api_field_RateLimit.Action.header_value_match>` may be set.
  
.. _envoy_api_field_RateLimit.Action.header_value_match:

header_value_match
  (:ref:`RateLimit.Action.HeaderValueMatch <envoy_api_msg_RateLimit.Action.HeaderValueMatch>`) 
  
  Only one of :ref:`source_cluster <envoy_api_field_RateLimit.Action.source_cluster>`, :ref:`destination_cluster <envoy_api_field_RateLimit.Action.destination_cluster>`, :ref:`request_headers <envoy_api_field_RateLimit.Action.request_headers>`, :ref:`remote_address <envoy_api_field_RateLimit.Action.remote_address>`, :ref:`generic_key <envoy_api_field_RateLimit.Action.generic_key>`, :ref:`header_value_match <envoy_api_field_RateLimit.Action.header_value_match>` may be set.
  
.. _envoy_api_msg_RateLimit.Action.SourceCluster:

RateLimit.Action.SourceCluster
------------------------------

`[RateLimit.Action.SourceCluster proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L392>`_

The following descriptor entry is appended to the descriptor:
("source_cluster", "<local service cluster>")

.. code-block:: json

  {

  }




.. _envoy_api_msg_RateLimit.Action.DestinationCluster:

RateLimit.Action.DestinationCluster
-----------------------------------

`[RateLimit.Action.DestinationCluster proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L397>`_

The following descriptor entry is appended to the descriptor:
("destination_cluster", "<routed target cluster>")

.. code-block:: json

  {

  }




.. _envoy_api_msg_RateLimit.Action.RequestHeaders:

RateLimit.Action.RequestHeaders
-------------------------------

`[RateLimit.Action.RequestHeaders proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L403>`_

The following descriptor entry is appended when a header contains a key
that matches the header_name:
("<descriptor_key>", "<header_value_queried_from_header>")

.. code-block:: json

  {
    "header_name": "...",
    "descriptor_key": "..."
  }

.. _envoy_api_field_RateLimit.Action.RequestHeaders.header_name:

header_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The header name to be queried from the request headers. The header’s
  value is used to populate the value of the descriptor entry for the
  descriptor_key.
  
  
.. _envoy_api_field_RateLimit.Action.RequestHeaders.descriptor_key:

descriptor_key
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The key to use in the descriptor entry.
  
  


.. _envoy_api_msg_RateLimit.Action.RemoteAddress:

RateLimit.Action.RemoteAddress
------------------------------

`[RateLimit.Action.RemoteAddress proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L415>`_

The following descriptor entry is appended to the descriptor and is
populated using the trusted address from x-forwarded-for:
("remote_address", "<trusted address from x-forwarded-for>")

.. code-block:: json

  {

  }




.. _envoy_api_msg_RateLimit.Action.GenericKey:

RateLimit.Action.GenericKey
---------------------------

`[RateLimit.Action.GenericKey proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L420>`_

The following descriptor entry is appended to the descriptor:
("generic_key", "<descriptor_value>")

.. code-block:: json

  {
    "descriptor_value": "..."
  }

.. _envoy_api_field_RateLimit.Action.GenericKey.descriptor_value:

descriptor_value
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The value to use in the descriptor entry.
  
  


.. _envoy_api_msg_RateLimit.Action.HeaderValueMatch:

RateLimit.Action.HeaderValueMatch
---------------------------------

`[RateLimit.Action.HeaderValueMatch proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L427>`_

The following descriptor entry is appended to the descriptor:
(“header_match”, “<descriptor_value>”)

.. code-block:: json

  {
    "descriptor_value": "...",
    "expect_match": "{...}",
    "headers": []
  }

.. _envoy_api_field_RateLimit.Action.HeaderValueMatch.descriptor_value:

descriptor_value
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The value to use in the descriptor entry.
  
  
.. _envoy_api_field_RateLimit.Action.HeaderValueMatch.expect_match:

expect_match
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) If set to true, the action will append a descriptor entry when the
  request matches the headers. If set to false, the action will append a
  descriptor entry when the request does not match the headers. The
  default value is true.
  
  
.. _envoy_api_field_RateLimit.Action.HeaderValueMatch.headers:

headers
  (:ref:`HeaderMatcher <envoy_api_msg_HeaderMatcher>`) Specifies a set of headers that the rate limit action should match
  on. The action will check the request’s headers against all the
  specified headers in the config. A match will happen if all the
  headers in the config are present in the request with the same values
  (or based on presence if the value field is not in the config).
  
  




.. _envoy_api_msg_HeaderMatcher:

HeaderMatcher
-------------

`[HeaderMatcher proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L460>`_


.. code-block:: json

  {
    "name": "...",
    "value": "...",
    "regex": "{...}"
  }

.. _envoy_api_field_HeaderMatcher.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the name of the header in the request.
  
  
.. _envoy_api_field_HeaderMatcher.value:

value
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies the value of the header. If the value is absent a request that
  has the name header will match, regardless of the header’s value.
  
  
.. _envoy_api_field_HeaderMatcher.regex:

regex
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Specifies whether the header value is a regular expression or not.
  Defaults to false.
  
  


.. _envoy_api_msg_VirtualHost:

VirtualHost
-----------

`[VirtualHost proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L471>`_


.. code-block:: json

  {
    "name": "...",
    "domains": [],
    "routes": [],
    "require_tls": "...",
    "virtual_clusters": [],
    "rate_limits": [],
    "request_headers_to_add": [],
    "response_headers_to_add": [],
    "response_headers_to_remove": [],
    "cors": "{...}"
  }

.. _envoy_api_field_VirtualHost.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The logical name of the virtual host. This is used when emitting certain
  statistics but is not relevant for routing.
  
  
.. _envoy_api_field_VirtualHost.domains:

domains
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) A list of domains (host/authority header) that will be matched to this
  virtual host. Wildcard hosts are supported in the form of “*.foo.com” or
  “*-bar.foo.com”. Note that the wildcard will not match the empty string.
  e.g. “*-bar.foo.com” will match “baz-bar.foo.com” but not “-bar.foo.com”.
  Additionally, a special entry “*” is allowed which will match any
  host/authority header. Only a single virtual host in the entire route
  configuration can match on “*”. A domain must be unique across all virtual
  hosts or the config will fail to load.
  
  
.. _envoy_api_field_VirtualHost.routes:

routes
  (:ref:`Route <envoy_api_msg_Route>`) The list of routes that will be matched, in order, for incoming requests.
  The first route that matches will be used.
  
  
.. _envoy_api_field_VirtualHost.require_tls:

require_tls
  (:ref:`VirtualHost.TlsRequirementType <envoy_api_enum_VirtualHost.TlsRequirementType>`) Specifies the type of TLS enforcement the virtual host expects.
  
  
.. _envoy_api_field_VirtualHost.virtual_clusters:

virtual_clusters
  (:ref:`VirtualCluster <envoy_api_msg_VirtualCluster>`) A list of virtual clusters defined for this virtual host. Virtual clusters
  are used for additional statistics gathering.
  
  
.. _envoy_api_field_VirtualHost.rate_limits:

rate_limits
  (:ref:`RateLimit <envoy_api_msg_RateLimit>`) Specifies a set of rate limit configurations that will be applied to the
  virtual host.
  
  
.. _envoy_api_field_VirtualHost.request_headers_to_add:

request_headers_to_add
  (:ref:`HeaderValueOption <envoy_api_msg_HeaderValueOption>`) Specifies a list of HTTP headers that should be added to each request
  handled by this virtual host. Headers specified at this level are applied
  after headers from enclosed RouteActions and before headers from the
  enclosing RouteConfiguration.
  
  
.. _envoy_api_field_VirtualHost.response_headers_to_add:

response_headers_to_add
  (:ref:`HeaderValueOption <envoy_api_msg_HeaderValueOption>`) Specifies a list of HTTP headers that should be added to each response
  handled by this virtual host. Headers specified at this level are applied
  after headers from enclosed RouteActions and before headers from the
  enclosing RouteConfiguration.
  
  
.. _envoy_api_field_VirtualHost.response_headers_to_remove:

response_headers_to_remove
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies a list of HTTP headers that should be removed from each response
  handle by this virtual host.
  
  
.. _envoy_api_field_VirtualHost.cors:

cors
  (:ref:`CorsPolicy <envoy_api_msg_CorsPolicy>`) Indicates that the virtual host has a CORS policy.
  
  


.. _envoy_api_enum_VirtualHost.TlsRequirementType:

Enum VirtualHost.TlsRequirementType
-----------------------------------

`[VirtualHost.TlsRequirementType proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L490>`_


.. _envoy_api_enum_value_VirtualHost.TlsRequirementType.NONE:

NONE
  *(DEFAULT)* ⁣No TLS requirement for the virtual host.
  
  
.. _envoy_api_enum_value_VirtualHost.TlsRequirementType.EXTERNAL_ONLY:

EXTERNAL_ONLY
  ⁣External requests must use TLS. If a request is external and it is not
  using TLS, a 301 redirect will be sent telling the client to use HTTPS.
  
  
.. _envoy_api_enum_value_VirtualHost.TlsRequirementType.ALL:

ALL
  ⁣All requests must use TLS. If a request is not using TLS, a 301 redirect
  will be sent telling the client to use HTTPS.
  
  

.. _envoy_api_msg_RouteConfiguration:

RouteConfiguration
------------------

`[RouteConfiguration proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/rds.proto#L536>`_


.. code-block:: json

  {
    "name": "...",
    "virtual_hosts": [],
    "internal_only_headers": [],
    "response_headers_to_add": [],
    "response_headers_to_remove": [],
    "request_headers_to_add": [],
    "validate_clusters": "{...}"
  }

.. _envoy_api_field_RouteConfiguration.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the route configuration. For example, it might match the
  router_config_name in the HttpConnectionManager > route_specifier > rds
  message.
  
  
.. _envoy_api_field_RouteConfiguration.virtual_hosts:

virtual_hosts
  (:ref:`VirtualHost <envoy_api_msg_VirtualHost>`) An array of virtual hosts that make up the route table.
  
  
.. _envoy_api_field_RouteConfiguration.internal_only_headers:

internal_only_headers
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies a list of HTTP headers that the connection manager will consider
  to be internal only. If they are found on external requests they will be
  cleaned prior to filter invocation. See x-envoy-internal for more
  information.
  
  
.. _envoy_api_field_RouteConfiguration.response_headers_to_add:

response_headers_to_add
  (:ref:`HeaderValueOption <envoy_api_msg_HeaderValueOption>`) Specifies a list of HTTP headers that should be added to each response that
  the connection manager encodes. Headers specified at this level are applied
  after headers from any enclosed VirtualHost or RouteAction.
  
  
.. _envoy_api_field_RouteConfiguration.response_headers_to_remove:

response_headers_to_remove
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Specifies a list of HTTP headers that should be removed from each response
  that the connection manager encodes.
  
  
.. _envoy_api_field_RouteConfiguration.request_headers_to_add:

request_headers_to_add
  (:ref:`HeaderValueOption <envoy_api_msg_HeaderValueOption>`) Specifies a list of HTTP headers that should be added to each request
  routed by the HTTP connection manager. Headers specified at this level are
  applied after headers from any enclosed VirtualHost or RouteAction.
  
  
.. _envoy_api_field_RouteConfiguration.validate_clusters:

validate_clusters
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) An optional boolean that specifies whether the clusters that the route
  table refers to will be validated by the cluster manager. If set to true
  and a route refers to a non-existent cluster, the route table will not
  load. If set to false and a route refers to a non-existent cluster, the
  route table will load and the router filter will return a 404 if the route
  is selected at runtime. This setting defaults to true if the route table
  is statically defined via the route_config option. This setting default to
  false if the route table is loaded dynamically via the rds option. Users
  may which to override the default behavior in certain cases (for example
  when using CDS with a static route table).
  
  

