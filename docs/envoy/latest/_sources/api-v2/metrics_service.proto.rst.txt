.. _envoy_api_file_api/metrics_service.proto:

Metrics Service
===============


.. _envoy_api_msg_StreamMetricsResponse:

StreamMetricsResponse
---------------------

`[StreamMetricsResponse proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/metrics_service.proto#L24>`_



.. WARNING::
 This message type has :ref:`draft <config_overview_v2_status>` status.
.. code-block:: json

  {}




.. _envoy_api_msg_StreamMetricsMessage:

StreamMetricsMessage
--------------------

`[StreamMetricsMessage proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/metrics_service.proto#L27>`_



.. WARNING::
 This message type has :ref:`draft <config_overview_v2_status>` status.
.. code-block:: json

  {
    "identifier": "{...}",
    "envoy_metrics": []
  }

.. _envoy_api_field_StreamMetricsMessage.identifier:

identifier
  (:ref:`StreamMetricsMessage.Identifier <envoy_api_msg_StreamMetricsMessage.Identifier>`) Identifier data effectively is a structured metadata. As a performance optimization this will
  only be sent in the first message on the stream.
  
  
.. _envoy_api_field_StreamMetricsMessage.envoy_metrics:

envoy_metrics
  (.io.prometheus.client.MetricFamily) A list of metric entries
  
  
.. _envoy_api_msg_StreamMetricsMessage.Identifier:

StreamMetricsMessage.Identifier
-------------------------------

`[StreamMetricsMessage.Identifier proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/metrics_service.proto#L28>`_



.. WARNING::
 This message type has :ref:`draft <config_overview_v2_status>` status.
.. code-block:: json

  {
    "node": "{...}"
  }

.. _envoy_api_field_StreamMetricsMessage.Identifier.node:

node
  (:ref:`Node <envoy_api_msg_Node>`, *REQUIRED*) The node sending metrics over the stream.
  
  



.. _envoy_api_msg_MetricsServiceConfig:

MetricsServiceConfig
--------------------

`[MetricsServiceConfig proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/metrics_service.proto#L43>`_

Metrics Service is configured as a built-in *envoy.metrics_service* :ref:`StatsSink
<envoy_api_msg_StatsSink>`. This opaque configuration will be used to create Metrics Service.


.. WARNING::
 This message type has :ref:`draft <config_overview_v2_status>` status.
.. code-block:: json

  {
    "grpc_service": "{...}"
  }

.. _envoy_api_field_MetricsServiceConfig.grpc_service:

grpc_service
  (:ref:`GrpcService <envoy_api_msg_GrpcService>`, *REQUIRED*) The upstream gRPC cluster that hosts the metrics service.
  
  

